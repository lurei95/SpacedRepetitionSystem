// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using SpacedRepetitionSystem.WebAPI.Core;

namespace SpacedRepetitionSystem.WebAPI.Migrations
{
    [DbContext(typeof(SpacedRepetionSystemDBContext))]
    [Migration("20200518100518_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.Card", b =>
                {
                    b.Property<long>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CardTemplateId")
                        .HasColumnType("bigint");

                    b.Property<long>("DeckId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CardId");

                    b.HasIndex("CardTemplateId");

                    b.HasIndex("DeckId");

                    b.HasIndex("UserId");

                    b.ToTable("Cards","Cards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.CardField", b =>
                {
                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("CardTemplateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProficiencyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardId", "FieldName");

                    b.HasIndex("CardTemplateId", "FieldName");

                    b.ToTable("CardFields","Cards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.CardFieldDefinition", b =>
                {
                    b.Property<long>("CardTemplateId")
                        .HasColumnType("bigint");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("ShowInputForPractice")
                        .HasColumnType("bit");

                    b.HasKey("CardTemplateId", "FieldName");

                    b.ToTable("CardFieldDefinitions","Cards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.CardTemplate", b =>
                {
                    b.Property<long>("CardTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CardTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("CardTemplates","Cards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.Deck", b =>
                {
                    b.Property<long>("DeckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DefaultCardTemplateId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsPinned")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DeckId");

                    b.HasIndex("DefaultCardTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("Decks","Cards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.PracticeHistoryEntry", b =>
                {
                    b.Property<long>("PracticeHistoryEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<int>("CorrectCount")
                        .HasColumnType("int");

                    b.Property<long>("DeckId")
                        .HasColumnType("bigint");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HardCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PracticeDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WrongCount")
                        .HasColumnType("int");

                    b.HasKey("PracticeHistoryEntryId");

                    b.HasIndex("CardId");

                    b.HasIndex("DeckId");

                    b.HasIndex("UserId");

                    b.ToTable("PracticeHistoryEntries","Cards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Security.RefreshToken", b =>
                {
                    b.Property<long>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TokenId");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens","Security");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Security.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users","Security");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.Card", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.CardTemplate", "CardTemplate")
                        .WithMany()
                        .HasForeignKey("CardTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.CardField", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.Card", "Card")
                        .WithMany("Fields")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.CardTemplate", "CardTemplate")
                        .WithMany()
                        .HasForeignKey("CardTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.CardFieldDefinition", "CardFieldDefinition")
                        .WithMany()
                        .HasForeignKey("CardTemplateId", "FieldName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.CardFieldDefinition", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.CardTemplate", "CardTemplate")
                        .WithMany("FieldDefinitions")
                        .HasForeignKey("CardTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.CardTemplate", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.Deck", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Cards.CardTemplate", "DefaultCardTemplate")
                        .WithMany()
                        .HasForeignKey("DefaultCardTemplateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Cards.PracticeHistoryEntry", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Security.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.Security.RefreshToken", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.Security.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
