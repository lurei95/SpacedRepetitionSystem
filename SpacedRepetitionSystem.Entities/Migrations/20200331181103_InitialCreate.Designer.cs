// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpacedRepetitionSystem.Entities.Core;

namespace SpacedRepetitionSystem.Entities.Migrations
{
    [DbContext(typeof(SpacedRepetionSystemDBContext))]
    [Migration("20200331181103_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.PracticeHistoryEntry", b =>
                {
                    b.Property<long>("SmartCardId")
                        .HasColumnType("bigint");

                    b.Property<long>("SmartCardFieldDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PracticeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PracticeResult")
                        .HasColumnType("int");

                    b.Property<long?>("SmartCardDefinitionId")
                        .HasColumnType("bigint");

                    b.HasKey("SmartCardId", "SmartCardFieldDefinitionId");

                    b.HasIndex("SmartCardDefinitionId");

                    b.ToTable("PracticeHistoryEntries","SmartCards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.PracticeSet", b =>
                {
                    b.Property<long>("PracticeSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DefaultSmartCardDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PracticeSetId");

                    b.HasIndex("DefaultSmartCardDefinitionId");

                    b.ToTable("PracticeSets","SmartCards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCard", b =>
                {
                    b.Property<long>("SmartCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("PracticeSetId")
                        .HasColumnType("bigint");

                    b.Property<long>("SmartCardDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("SmartCardId");

                    b.HasIndex("PracticeSetId");

                    b.HasIndex("SmartCardDefinitionId");

                    b.ToTable("SmartCards","SmartCards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardDefinition", b =>
                {
                    b.Property<long>("SmartCardDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SmartCardDefinitionId");

                    b.ToTable("SmartCardDefinition","SmartCards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardField", b =>
                {
                    b.Property<long>("SmartCardId")
                        .HasColumnType("bigint");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("SmartCardDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SmartCardId", "FieldName");

                    b.HasIndex("SmartCardDefinitionId", "FieldName");

                    b.ToTable("SmartCardFields","SmartCards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardFieldDefinition", b =>
                {
                    b.Property<long>("SmartCardDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("SmartCardDefinitionId", "FieldName");

                    b.ToTable("SmartCardFieldDefinitions","SmartCards");
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.PracticeHistoryEntry", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardDefinition", "SmartCardDefinition")
                        .WithMany()
                        .HasForeignKey("SmartCardDefinitionId");

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCard", "SmartCard")
                        .WithMany()
                        .HasForeignKey("SmartCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.PracticeSet", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardDefinition", "DefaultSmartCardDefinition")
                        .WithMany()
                        .HasForeignKey("DefaultSmartCardDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCard", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.PracticeSet", "PracticeSet")
                        .WithMany("SmartCards")
                        .HasForeignKey("PracticeSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardDefinition", "SmartCardDefinition")
                        .WithMany()
                        .HasForeignKey("SmartCardDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardField", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardDefinition", "SmartCardDefinition")
                        .WithMany()
                        .HasForeignKey("SmartCardDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCard", "SmartCard")
                        .WithMany("Fields")
                        .HasForeignKey("SmartCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardFieldDefinition", "SmartCardFieldDefinition")
                        .WithMany()
                        .HasForeignKey("SmartCardDefinitionId", "FieldName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardFieldDefinition", b =>
                {
                    b.HasOne("SpacedRepetitionSystem.Entities.Entities.SmartCards.SmartCardDefinition", "SmartCardDefinition")
                        .WithMany("FieldDefinitions")
                        .HasForeignKey("SmartCardDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
