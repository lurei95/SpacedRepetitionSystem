@inherits LayoutComponentBase
@using SpacedRepetitionSystem.Components.Modals;

@inject AuthenticationStateProvider AuthenticationProvider;

  <SpacedRepetitionSystem.Components.Interaction.WaitSpinner Visible="isLoading">
    <AuthorizeView>
      <Authorized>
        <div class="main d-flex flex-column">
          <TopBar IsLoggedIn="true"></TopBar>
          <div class="row d-flex flex-row flex-grow-1" style="padding: unset !important; margin: unset !important;">
            <div class="sidebar flex-colum d-flex" style="padding-left: unset !important; height: unset !important">
              <NavMenu />
            </div>
            <div class="col content px-4 mb-4 flex-grow-1 d-flex flex-column main-layout">
              @Body
            </div>
          </div>
        </div>
      </Authorized>
      <NotAuthorized>
        <div class="main d-flex flex-column">
          <TopBar IsLoggedIn="false"></TopBar>
          <div class="col content px-4 mb-4 flex-grow-1 d-flex flex-column">
            @Body
          </div>
        </div>
      </NotAuthorized>
    </AuthorizeView>
    <ModalDialog />
  </SpacedRepetitionSystem.Components.Interaction.WaitSpinner>

<style>
  .main-layout {
    max-height: calc(100vh - 60px);
    max-width: calc(100vw - 250px);
    margin-bottom: 0px !important;
  }

  @@media (max-width: 1200px) {
    .sidebar {
      display: none !important;
    }

    .main-layout {
      max-width: 100vw;
      padding: 0px!important;
      margin: 0px!important;
    }
  }
</style>

@code
{ 
  private bool isLoading = true;

  ///<inheritdoc/>  protected override void OnParametersSet()
  { AuthenticationProvider.AuthenticationStateChanged += (sender) => isLoading = false; }}