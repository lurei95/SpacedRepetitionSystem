@page "/"
@page "/Home/"

@using SpacedRepetitionSystem.Components.ViewModels;
@using SpacedRepetitionSystem.ViewModels;
@using SpacedRepetitionSystem.Components.Interaction;
@using Blazorise.DataGrid;
@using SpacedRepetitionSystem.Entities;
@using SpacedRepetitionSystem.Entities.Entities.Cards;
@using SpacedRepetitionSystem.Components.Containers;

@inherits PageBase<HomeViewModel>

<ViewModelArea ViewModel="@ViewModel">
  <TabCard Title="@ViewModel.Title" IsLoading="@IsLoading" BodyClass="d-flex justify-content-around chart-container">
    <ChildContent>
      <div class="d-flex flex-column custom-col mt-4">
        <h5 class="card-title mb-4">@UIStrings.Actions</h5>
        <div class="mb-4 d-flex flex-column">
          <div class="action-container row ml-4 mr-4 mb-3 d-flex justify-content-center align-items-center">
            <div class="action-label-div d-flex flex-column">
              <label style="width: 100px; margin: 0px;">@(EntityNameHelper.GetPluralName<Deck>()):</label>
            </div>
            <div class="action-div d-flex flex-column flex-fill ml-2">
              <Button Class="grid-edit-button" Command="ViewModel.NewDeckCommand"></Button>
            </div>
            <div class="action-div d-flex flex-column flex-fill ml-2">
              <Button Class="grid-edit-button" Command="ViewModel.SearchDecksCommand"></Button>
            </div>
          </div>
          <div class="action-container row ml-4 mr-4 mb-3 d-flex justify-content-center align-items-center">
            <div class="action-label-div d-flex flex-column">
              <label style="width: 100px; margin: 0px;">@(EntityNameHelper.GetPluralName<Card>()):</label>
            </div>
            <div class="action-div d-flex flex-column flex-fill ml-2">
              <Button Class="grid-edit-button" Command="ViewModel.SearchCardsCommand"></Button>
            </div>
          </div>
          <div class="action-container row ml-4 mr-4 mb-3 d-flex justify-content-center align-items-center">
            <div class="action-label-div d-flex flex-column">
              <label style="width: 100px; margin: 0px;">@(EntityNameHelper.GetPluralName<CardTemplate>()):</label>
            </div>
            <div class="action-div d-flex flex-column flex-fill ml-2">
              <Button Class="grid-edit-button" Command="ViewModel.NewTemplateCommand"></Button>
            </div>
            <div class="action-div d-flex flex-column flex-fill ml-2">
              <Button Class="grid-edit-button" Command="ViewModel.SearchTemplatesCommand"></Button>
            </div>
          </div>
          </div>
        <h5 class="card-title mb-4">@UIStrings.PinnedDecks</h5>
        <SearchGrid TItem="Deck"
                    Items="@ViewModel.PinnedDecks"
                    WaitSpinnerVisible="false"
                    SelectionEnabled="false"
                    PageSize="8"
                    ShowPager="false">
          <Columns>
            <DataGridColumn TItem="Deck"
                            Field="@nameof(Deck.Title)"
                            Caption="@UIStrings.Title" Sortable="true" />
            <DataGridColumn TItem="Deck" Width="50" TextAlignment="@Blazorise.TextAlignment.Center"
                            Field="@nameof(Deck.CardCount)"
                            Caption="@(EntityNameHelper.GetPluralName<Card>())" Sortable="false" />
            <DataGridColumn TItem="Deck" Width="110" TextAlignment="@Blazorise.TextAlignment.Center"
                            Field="@nameof(Deck.DueCardCount)"
                            Caption="@UIStrings.DueCards" Sortable="false" />
            <DataGridColumn TItem="Deck" Width="100" HeaderCellClass="command-cell"
                            Field="@nameof(Deck.DeckId)"
                            Caption="" CellClass="@((item) => "command-cell")" Sortable="false">
              <DisplayTemplate>
                @{
                  <Button CommandParameter="context" Class="grid-edit-button column-button" Command="ViewModel.PracticeDeckCommand"></Button>
                }
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Deck" Width="130"
                            Field="@nameof(Deck.DeckId)" HeaderCellClass="command-cell"
                            Caption="" CellClass="@((item) => "command-cell")" Sortable="false">
              <DisplayTemplate>
                @{
                  <Button CommandParameter="context.DeckId" Class="grid-new-button column-button" Command="ViewModel.AddCardCommand"></Button>
                }
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Deck" Width="100" HeaderCellClass="command-cell"
                            Field="@nameof(Deck.DeckId)"
                            Caption="" CellClass="@((item) => "command-cell")" Sortable="false">
              <DisplayTemplate>
                @{
                  <Button CommandParameter="context.DeckId" Class="grid-edit-button column-button" Command="ViewModel.ShowStatisticsCommand"></Button>
                }
              </DisplayTemplate>
            </DataGridColumn>
          </Columns>
          <ContextActions>
            <Button Command="@ViewModel.PracticeDeckCommand" CommandParameter="@context" Class="dropdown-item"></Button>
            <Button Command="@ViewModel.AddCardCommand" CommandParameter="@context.DeckId" Class="dropdown-item"></Button>
            <Button Command="@ViewModel.ShowStatisticsCommand" CommandParameter="@context.DeckId" Class="dropdown-item"></Button>
          </ContextActions>
        </SearchGrid>
      </div>
      <div class="d-flex flex-column custom-col mt-4">
        <h5 class="card-title mb-4">@UIStrings.ProblemCards</h5>
        <SearchGrid TItem="PracticeHistoryEntry"
                    Items="@ViewModel.ProblemWords"
                    WaitSpinnerVisible="false"
                    SelectionEnabled="false"
                    PageSize="10"
                    ShowPager="false">
          <Columns>
            <DataGridColumn TItem="PracticeHistoryEntry" Width="120"
                            Field="@nameof(PracticeHistoryEntry.CardId)"
                            Caption="#" Sortable="false ">
              <DisplayTemplate>
                <a href="@("/Cards/" + @context.CardId)">@context.CardId</a>
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="PracticeHistoryEntry"
                            Field="@nameof(PracticeHistoryEntry.DeckId)"
                            Caption="@(EntityNameHelper.GetName<Deck>())" Sortable="false">
              <DisplayTemplate>
                <a href="@("/Decks/" + @context.DeckId)">@ViewModel.ProblemWordDecks[context.DeckId].Title</a>
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="PracticeHistoryEntry" Width="50" TextAlignment="@Blazorise.TextAlignment.Center"
                            Field="@nameof(PracticeHistoryEntry.CorrectCount)"
                            Caption="@UIStrings.Correct" Sortable="false" CellClass="@((item) => "right")" />
            <DataGridColumn TItem="PracticeHistoryEntry" Width="50" TextAlignment="@Blazorise.TextAlignment.Center"
                            Field="@nameof(PracticeHistoryEntry.HardCount)"
                            Caption="@UIStrings.Hard" Sortable="false" CellClass="@((item) => "hard")" />
            <DataGridColumn TItem="PracticeHistoryEntry" Width="50" TextAlignment="@Blazorise.TextAlignment.Center"
                            Field="@nameof(PracticeHistoryEntry.WrongCount)"
                            Caption="@UIStrings.Wrong" Sortable="false" CellClass="@((item) => "wrong")" />
            <DataGridColumn TItem="PracticeHistoryEntry" Width="100" TextAlignment="@Blazorise.TextAlignment.Center"
                            Field="@nameof(PracticeHistoryEntry.DeckId)" CellClass="@((item) => GetPercentageClass(item))"
                            Caption="@UIStrings.Rate" Sortable="false">
              <DisplayTemplate>
                @(CalculateRate(context).ToString("P"))
              </DisplayTemplate>
            </DataGridColumn>
          </Columns>
        </SearchGrid>
      </div>
    </ChildContent>
  </TabCard>
</ViewModelArea>

<style>
  .custom-col {
    width: 45%;
  }

  @@media (max-width: 1200px) {
    .custom-col {
      width: 100%;
    }

    .chart-container {
      flex-direction: column !important;
      display: unset !important;
    }
  }

  @@media (max-width: 700px) {
    .action-container {
      flex-direction: column !important;
      align-items: stretch !important;
    }

    .action-label-div > label {
      width: unset !important;
    }

    .action-div {
      margin: 0.25rem !important;
    }

    .action-label-div {
      align-items: center !important;
      margin-top: 1rem !important;
      margin-bottom: 0.25rem !important;
    }
  }
</style>

@code
{
  private double CalculateRate(PracticeHistoryEntry entry)
  {
    if (entry.CorrectCount == 0 && entry.WrongCount == 0)
      return 1.0;
    return ((double)entry.CorrectCount) / (entry.CorrectCount + entry.WrongCount);
  }

  private string GetPercentageClass(PracticeHistoryEntry entry)
  {
    double rate = CalculateRate(entry);
    if (rate >= 0.75)
      return "right";
    else if (rate >= 0.50)
      return "hard";
    return "wrong";
  }
}