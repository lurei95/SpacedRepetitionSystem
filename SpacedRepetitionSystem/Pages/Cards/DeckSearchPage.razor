@page "/Decks"

@using SpacedRepetitionSystem.Components.ViewModels;
@using SpacedRepetitionSystem.Entities.Entities.Cards;
@using SpacedRepetitionSystem.Components.ViewModels.Cards;
@using SpacedRepetitionSystem.Components.Interaction;
@using SpacedRepetitionSystem.Components.Containers;
@using Blazorise.DataGrid;

@inherits SearchPageBase<Deck, DeckSearchViewModel>

  <ViewModelArea ViewModel="@ViewModel">
    <TabCard Title="Search Decks">
      <HeaderButtons>
        <Button Command="@ViewModel?.CloseCommand" IsIconButton="true" TextColor="#e74c3c"></Button>
      </HeaderButtons>
      <ChildContent>
        <SearchGrid TItem="Deck"
                    WaitSpinnerVisible="ViewModel.IsSearching"
                    Items="@ViewModel.SearchResults"
                    @bind-SelectedItem="@ViewModel.SelectedEntity"
                    PageSize="12"
                    ShowPager="true"
                    DeleteCommand="@ViewModel.DeleteCommand"
                    EditCommand="@ViewModel.EditCommand"
                    NewCommand="@ViewModel.NewCommand">
          <Columns>
            <DataGridColumn TItem="Deck"
                            Field="@nameof(Deck.DeckId)"
                            Caption="#" Sortable="true">
              <DisplayTemplate>
                <a href="@("/Decks/" + @context.DeckId)">@context.DeckId</a>
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Deck"
                            Field="@nameof(Deck.Title)"
                            Caption="Title" Sortable="true" />
            <DataGridColumn TItem="Deck"
                            Field="@nameof(Deck.CardCount)"
                            Caption="Cards" Sortable="false" />
            <DataGridColumn TItem="Deck"
                            Field="@nameof(Deck.DueCardCount)"
                            Caption="Cards" Sortable="false" />
            <DataGridColumn TItem="Deck" Width="100"
                            Field="@nameof(Deck.DeckId)"
                            Caption="" Sortable="false">
              <DisplayTemplate>
                @{
                  <Button CommandParameter="context.DeckId" Class="grid-edit-button column-button" Command="ViewModel.PracticeDeckCommand"></Button>
                }
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="Deck" Width="130"
                            Field="@nameof(Deck.DeckId)"
                            Caption="" Sortable="false">
              <DisplayTemplate>
                @{
                  <Button CommandParameter="(context as Deck).DeckId" Class="grid-new-button column-button" Command="ViewModel.AddCardsCommand"></Button>
                }
              </DisplayTemplate>
            </DataGridColumn>
          </Columns>
        </SearchGrid>
      </ChildContent>
    </TabCard>
  </ViewModelArea>

@code
{
  ///<inheritdoc/>
  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    await ViewModel.Search();
  }
}