@page "/Decks"

@using SpacedRepetitionSystem.Components.ViewModels;
@using SpacedRepetitionSystem.Entities.Entities.Cards;
@using SpacedRepetitionSystem.Components.ViewModels.Cards;
@using SpacedRepetitionSystem.Components.Interaction;
@using SpacedRepetitionSystem.Components.Containers;
@using Blazorise.DataGrid;

@inherits SearchPageBase<Deck, DeckSearchViewModel>

<ViewModelArea ViewModel="@ViewModel">
  <div class="card flex-grow-0 fullsizeCard">
    <div class="card-header bg-dark">
      <div class="row">
        <div class="col col-md-auto text-white">
          Search Decks
        </div>
        <div class="col d-flex justify-content-end">
          <Button Command="@ViewModel?.CloseCommand" IsIconButton="true" TextColor="#e74c3c"></Button>
        </div>
      </div>
    </div>
    <div class="card-body scrollable">
      <SearchGrid TItem="Deck"
                  WaitSpinnerVisible="ViewModel.IsSearching"
                  Items="@ViewModel.SearchResults"
                  @bind-SelectedItem="@ViewModel.SelectedEntity"
                  PageSize="12"
                  ShowPager="true"
                  DeleteCommand="@ViewModel.DeleteCommand"
                  EditCommand="@ViewModel.EditCommand"
                  NewCommand="@ViewModel.NewCommand">
        <Columns>
          <DataGridColumn TItem="Deck"
                          Field="@nameof(Deck.DeckId)"
                          Caption="#" Sortable="true">
            <DisplayTemplate>
              <a href="@("/Decks/" + @context.DeckId)">@context.DeckId</a>
            </DisplayTemplate>
          </DataGridColumn>
          <DataGridColumn TItem="Deck"
                          Field="@nameof(Deck.Title)"
                          Caption="Title" Sortable="true" />
          <DataGridColumn TItem="Deck"
                          Field="@nameof(Deck.CardCount)"
                          Caption="Cards" Sortable="false" />
          <DataGridColumn TItem="Deck"
                          Field="@nameof(Deck.DueCardCount)"
                          Caption="Cards" Sortable="false" />
          <DataGridColumn TItem="Deck" Width="100"
                          Field="@nameof(Deck.DeckId)"
                          Caption="" Sortable="false">
            <DisplayTemplate>
              @{
                <Button CommandParameter="context.DeckId" Class="grid-edit-button column-button" Command="ViewModel.PracticeDeckCommand"></Button>
              }
            </DisplayTemplate>
          </DataGridColumn>
          <DataGridColumn TItem="Deck" Width="130"
                          Field="@nameof(Deck.DeckId)"
                          Caption="" Sortable="false">
            <DisplayTemplate>
              @{
                <Button CommandParameter="(context as Deck).DeckId" Class="grid-new-button column-button" Command="ViewModel.AddCardsCommand"></Button>
              }
            </DisplayTemplate>
          </DataGridColumn>
        </Columns>
      </SearchGrid>
    </div>
  </div>
</ViewModelArea>

@code
{
  ///<inheritdoc/>
  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    await ViewModel.Search();
  }
}