@page "/Cards"
@page "/Decks/{DeckId:long}/Cards"

@using SpacedRepetitionSystem.Components.ViewModels;
@using SpacedRepetitionSystem.ViewModels.Cards;
@using SpacedRepetitionSystem.Components.Interaction;
@using Blazorise.DataGrid;
@using SpacedRepetitionSystem.Components.Containers;

@inherits SearchPageBase<SpacedRepetitionSystem.Entities.Entities.Cards.Card, CardSearchViewModel>

  <ViewModelArea ViewModel="@ViewModel">
    <TabCard Title="@ViewModel?.Title" 
             IsLoading="ViewModel.IsSearching">
      <HeaderButtons>
        <Button Command="@ViewModel?.CloseCommand" IsIconButton="true" TextColor="#e74c3c"></Button>
      </HeaderButtons>
      <ChildContent>
        <SearchGrid TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card"
                    Items="@ViewModel.SearchResults"
                    @bind-SelectedItem="@ViewModel.SelectedEntity"
                    PageSize="12"
                    ShowPager="true"
                    DeleteCommand="@ViewModel.DeleteCommand"
                    EditCommand="@ViewModel.EditCommand"
                    NewCommand="@ViewModel.NewCommand">
          <Columns>
            <DataGridColumn TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card" Width="120"
                            Field="@nameof(SpacedRepetitionSystem.Entities.Entities.Cards.Card.CardId)"
                            Caption="#" Sortable="true">
              <DisplayTemplate>
                <a href="@("/Cards/" + @context.CardId)">@context.CardId</a>
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card"
                            Field="@nameof(SpacedRepetitionSystem.Entities.Entities.Cards.Card.DeckId)"
                            Caption="Deck" Sortable="true">
              <DisplayTemplate>
                <a href="@("/Decks/" + @context.DeckId)">@context.Deck.Title</a>
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card"
                            Field="@nameof(SpacedRepetitionSystem.Entities.Entities.Cards.Card.Fields)"
                            Caption="Field 1" Sortable="false">
              <DisplayTemplate>
                @{
                  string value = (context as SpacedRepetitionSystem.Entities.Entities.Cards.Card)?.Fields[0].FieldName;
                  if (!string.IsNullOrEmpty(value))
                    @($"{value}")
                }
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card"
                            Field="@nameof(SpacedRepetitionSystem.Entities.Entities.Cards.Card.Fields)"
                            Caption="Field 2" Sortable="false">
              <DisplayTemplate>
                @{
                  string value = (context as SpacedRepetitionSystem.Entities.Entities.Cards.Card)?.Fields[1].FieldName;
                  if (!string.IsNullOrEmpty(value))
                    @($"{value}")
                }
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card"
                            Field="@nameof(SpacedRepetitionSystem.Entities.Entities.Cards.Card.Fields)"
                            Caption="Field 3" Sortable="false">
              <DisplayTemplate>
                @{
                  SpacedRepetitionSystem.Entities.Entities.Cards.Card card = context as SpacedRepetitionSystem.Entities.Entities.Cards.Card;
                  if (card != null)
                  {
                    string value = card.Fields.Count > 2 ? card.Fields[2].FieldName : String.Empty;
                    if (!string.IsNullOrEmpty(value))
                      @($"{value}")
                    }
                }
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="SpacedRepetitionSystem.Entities.Entities.Cards.Card" Width="100"
                            Field="@nameof(SpacedRepetitionSystem.Entities.Entities.Cards.Card.CardId)"
                            Caption="" Sortable="false">
              <DisplayTemplate>
                @{
                  <Button CommandParameter="context" Class="grid-edit-button column-button" Command="ViewModel.ShowStatisticsCommand"></Button>
                }
              </DisplayTemplate>
            </DataGridColumn>
          </Columns>
        </SearchGrid>
      </ChildContent>
    </TabCard>
  </ViewModelArea>

@code
{
  /// <summary>
  /// Id of the deck
  /// </summary>
  [Parameter]
  public long? DeckId { set => ViewModel.DeckId = value; }

  ///<inheritdoc/>
  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    await ViewModel.SearchAsync();
  }
}
