@page "/Templates"

@using SpacedRepetitionSystem.Components.ViewModels;
@using SpacedRepetitionSystem.Entities.Entities.Cards;
@using SpacedRepetitionSystem.Components.ViewModels.Cards;
@using SpacedRepetitionSystem.Components.Interaction;
@using SpacedRepetitionSystem.Components.Containers;
@using Blazorise.DataGrid;

@inherits SearchPageBase<CardTemplate, CardTemplateSearchViewModel>

  <ViewModelArea ViewModel="@ViewModel">
    <TabCard Title="Search Templates">
      <HeaderButtons>
        <Button Command="@ViewModel?.CloseCommand" IsIconButton="true" TextColor="#e74c3c"></Button>
      </HeaderButtons>
      <ChildContent>
        <SearchGrid TItem="CardTemplate"
                    Items="@ViewModel.SearchResults"
                    @bind-SelectedItem="@ViewModel.SelectedEntity"
                    WaitSpinnerVisible="ViewModel.IsSearching"
                    PageSize="12"
                    ShowPager="true"
                    DeleteCommand="@ViewModel.DeleteCommand"
                    EditCommand="@ViewModel.EditCommand"
                    NewCommand="@ViewModel.NewCommand">
          <Columns>
            <DataGridColumn TItem="CardTemplate"
                            Field="@nameof(CardTemplate.CardTemplateId)"
                            Caption="#" Sortable="true">
              <DisplayTemplate>
                <a href="@("/Templates/" + @context.CardTemplateId)">@context.CardTemplateId</a>
              </DisplayTemplate>
            </DataGridColumn>
            <DataGridColumn TItem="CardTemplate"
                            Field="@nameof(CardTemplate.Title)"
                            Caption="Title" Sortable="true" />
            <DataGridColumn TItem="CardTemplate"
                            Field="@nameof(CardTemplate.FieldDefinitions)"
                            Caption="Field Count" Sortable="false">
              <DisplayTemplate>
                @{
                  @($"{(context as CardTemplate)?.FieldDefinitions.Count }")
                }
              </DisplayTemplate>
            </DataGridColumn>
          </Columns>
        </SearchGrid>
      </ChildContent>
    </TabCard>
  </ViewModelArea>

@code
{
  ///<inheritdoc/>
  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    await ViewModel.Search();
  }
}
