@page "/Templates/{EntityId:long}"
@page "/Templates/New"

@using SpacedRepetitionSystem.Entities.Entities.Cards;
@using SpacedRepetitionSystem.ViewModels.Cards;
@using SpacedRepetitionSystem.Components.Interaction;
@using SpacedRepetitionSystem.Components.Edits;
@using SpacedRepetitionSystem.Components.ViewModels;
@using SpacedRepetitionSystem.Components.Containers;

@inherits EditPageBase<CardTemplate, CardTemplateEditViewModel>

<ViewModelArea ViewModel="ViewModel">
  <TabCard Title="@ViewModel?.Title" IsLoading="@IsLoading">
    <CardTabs>
      <CardTab Title="Main">
        <h5 class="card-title">Main Properties</h5>
        <TextEdit Caption="Title" Property="ViewModel.TitleProperty" MaxLength="100"></TextEdit>
        <div class="row flex-row customRow d-felx" style="margin-right: 10px;">
          <h5 class="card-title">Fields</h5>
          <div class="d-felx justify-content-end flex-fill">
            <Button IsIconButton="true" Style="font-size: 1.2rem" TextColor="#343a40" Command="ViewModel.AddFieldDefinitionCommand"></Button>
          </div>
        </div>
        @for (int i = 0; i < ViewModel.FieldDefinitions.Count; i++)
         {
            int c = i;
            <div class="row flex-row customRow d-felx" style="margin-right: 10px;">
              <TextEdit Caption="@("Field " + (i + 1))" Property="ViewModel.FieldNameProperties[i]" MaxLength="50"></TextEdit>
              <Button IsIconButton="true" IsVisible="@(!ViewModel.FieldDefinitions[c].IsRequired)" TextColor="#e74c3c" Style="padding-bottom: 5px" Command="ViewModel.RemoveFieldDefinitionCommand" CommandParameter="i"></Button>
            </div>
            <div class="row flex-row customRow d-felx">
              <div class="custom-control custom-checkbox checkbox-lg ml-3 mb-3">
                <input @bind="ViewModel.FieldDefinitions[c].ShowInputForPractice" type="checkbox" class="custom-control-input" id="@("useInputCheck" + i)">
                <label class="custom-control-label" for="@("useInputCheck" + i)">Use input for practice</label>
              </div>
            </div>
         }
      </CardTab>
    </CardTabs>
    <HeaderButtons>
      <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle dropdown-no-text mr-1" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="padding-top: 5px; padding-bottom: 0px;" />
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenu2">
          <Button Command="@ViewModel?.DeleteCommand" Class="dropdown-item"></Button>
          <Button Command="@ViewModel?.SaveChangesCommand" Class="dropdown-item"></Button>
        </div>
      </div>
      <Button Command="@ViewModel?.CloseCommand" IsIconButton="true" TextColor="#e74c3c"></Button>
    </HeaderButtons>
    <CardFooter>
      <div class="d-flex justify-content-end">
        <Button Class="btn-primary btn-lg" Command="ViewModel.SaveChangesCommand"></Button>
      </div>
    </CardFooter>
  </TabCard>
</ViewModelArea>

<style>
  .customRow {
    margin-left: 0px;
  }
</style>

@code
{
}